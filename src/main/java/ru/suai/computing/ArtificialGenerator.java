package main.java.ru.suai.computing;

import java.util.Random;

/**
 * It is a class for generation a different data
 */
public class ArtificialGenerator implements Generator {
    // constants
    public static final String LINEAR_FUNCTION_TYPE = "LINEAR";
    public static final String SQRT_FUNCTION_TYPE = "SQRT";

    /**
     * The type of generated function
     */
    private String functionType;

    /**
     * Random generator for value deviation
     */
    private Random randomGenerator;

    /**
     * Parameter for randomGenerator
     */
    private int randomness;

    /**
     * Coefficient for linear function
     */
    private int k;

    public ArtificialGenerator(String functionType, int k, int randomness) {
        this.functionType = functionType;
        this.randomGenerator = new Random();
        this.randomness = randomness;
        this.k = k;
    }

    /**
     *
     * @param x time moment
     * @return generated by function value
     */
    @Override
    public Object getNextValue(int x) {
        if (this.functionType.equals(LINEAR_FUNCTION_TYPE)) {
            return generateLineValue(x);
        }

        if (this.functionType.equals(SQRT_FUNCTION_TYPE)) {
            return this.generateSqrtValue(x);
        }

        return 0;
    }

    /**
     * Returns the next value, generated by linear function
     *
     * @param x time moment
     * @return value by linear function
     */
    private double generateLineValue(int x) {
        double minRandomValue =  - this.randomness / 2,
                maxRandomValue = this.randomness / 2;

        return this.k * x + minRandomValue + (maxRandomValue - minRandomValue) * this.randomGenerator.nextDouble();
    }

    /**
     * Returns the next value, generated by sqrt function
     *
     * @param x time moment
     * @return value by sqrt function
     */
    private double generateSqrtValue(int x) {
        double minRandomValue =  - this.randomness / 2,
                maxRandomValue = this.randomness / 2;

        return this.k * Math.sqrt(x) + minRandomValue + (maxRandomValue - minRandomValue) * this.randomGenerator.nextDouble();
    }
}
